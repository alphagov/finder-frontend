# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/govuk_app_config/all/govuk_app_config.rbi
#
# govuk_app_config-1.19.0
module GovukAppConfig
end
module GovukStatsd
  def self.batch(*args, &block); end
  def self.client; end
  def self.count(*args, &block); end
  def self.decrement(*args, &block); end
  def self.gauge(*args, &block); end
  def self.increment(*args, &block); end
  def self.set(*args, &block); end
  def self.time(*args, &block); end
  def self.timing(*args, &block); end
  extend SingleForwardable
end
module GovukError
  def self.configure; end
  def self.notify(exception_or_message, args = nil); end
end
module GovukLogging
  def self.configure; end
end
module GovukHealthcheck
  def self.healthcheck(checks); end
  def self.rack_response(*checks); end
end
class GovukHealthcheck::Checkup
  def all_components; end
  def build_component_status(check); end
  def checks; end
  def component_statuses; end
  def details(check); end
  def initialize(checks); end
  def run; end
  def status?(status); end
  def worst_status; end
end
class GovukHealthcheck::ActiveRecord
  def name; end
  def status; end
end
class GovukHealthcheck::SidekiqRedis
  def name; end
  def status; end
end
class GovukHealthcheck::ThresholdCheck
  def critical_threshold; end
  def details; end
  def message; end
  def status; end
  def total; end
  def value; end
  def warning_threshold; end
end
class GovukHealthcheck::SidekiqQueueCheck
  def critical_threshold(queue:); end
  def details; end
  def message; end
  def queues; end
  def status; end
  def warning_threshold(queue:); end
end
class GovukHealthcheck::SidekiqQueueLatencyCheck < GovukHealthcheck::SidekiqQueueCheck
  def name; end
  def queues; end
end
class GovukHealthcheck::SidekiqQueueSizeCheck < GovukHealthcheck::SidekiqQueueCheck
  def name; end
  def queues; end
end
class GovukHealthcheck::SidekiqRetrySizeCheck < GovukHealthcheck::ThresholdCheck
  def name; end
  def value; end
end
module GovukUnicorn
  def self.configure(config); end
end
module GovukXRay
  def self.initialize(app); end
  def self.start; end
end
class GovukAppConfig::Railtie < Rails::Railtie
end
module GovukContentSecurityPolicy
  def self.build_policy(policy); end
  def self.configure; end
end
